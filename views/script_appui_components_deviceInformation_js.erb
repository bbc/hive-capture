require.def("<%= APPLICATION_ID %>/appui/components/deviceInformation",
  [
    "antie/application",
    "antie/widgets/component",
    "antie/widgets/label",
    "antie/widgets/container",
    "antie/widgets/list"
  ],
  function (Application, Component, Label, Container, List) {
    return Component.extend({
      init: function() {
        var self = this;
        this._super("deviceInformation");

        var widgets = {};

        var ddbid = new Container("ddbid_container");
        device_id='-';
        device_status = '---';
        device_brand = '<%= brand %>';
        device_model = '<%= model %>';
        device_config = '<%= configuration %>';
        device_ipaddr = '<%= request.ip %>';
        whoami = '<%= whoami %>';
        device_mac = '<%= mac(request.ip) %>';
        titantv_url = '<%= url %>';
        ddbid_label = new Label("ddbid", device_id);
        ddbid.appendChildWidget(ddbid_label);
        this.appendChildWidget(ddbid);
        widgets['ddbid'] = ddbid_label;

        var table = new List('device_table');

        var table_rows = {
          status: { name: "Status", value: device_status },
          device_brand: { name: "Brand", value: device_brand },
          device_model: { name: "Model", value: device_model },
          device_config: { name: "Configuration", value: device_config },
          device_ipaddr: { name: "IP Address", value: device_ipaddr },
          whoami: { name: "WHOAMI", value: whoami },
          device_mac: { name: "MAC Address", value: device_mac },
          titantv_url: { name: "TitanTV url", value: titantv_url },
          polling_count: { name: "Polling", value: 0 }
        };

        for (var key in table_rows) {
          var row = new Container();
          row.addClass('row');
          label = new Label(key + "_label", table_rows[key]["name"]);
          label.addClass('label');
          value = new Label(key, table_rows[key]["value"]);
          value.addClass('value')
          row.appendChildWidget(label);
          row.appendChildWidget(value);
          table.appendChildWidget(row);
          widgets[key] = value;
        }

        this.appendChildWidget(table);

        message_box = new Container('message_box');
        widgets['message'] = new Label('message', '[No message]');
        message_box.appendChildWidget(widgets['message']);
        this.appendChildWidget(message_box);

        application = Application.getCurrentApplication();
        device = application.getDevice();
        polling_count = 0;

        // Start polling
        var poll = function(){
          var callbacks = {
            onSuccess : function( json ) {
              taskInfo = json;
              setTimeout(poll, 5000);
              if (device_id == parseInt(device_id, 10)) {
                if ( taskInfo.action ) {
                  if ( taskInfo.action.action_type == 'redirect' ) {
                    application.launchAppFromURL(taskInfo.action.body, {}, [], true);
                  } else if ( taskInfo.action.action_type == 'message' ) {
                    widgets['message'].setText(taskInfo.action.body);
                  }
                } else {
                  // Something
                }
              } else {
                //document.getElementById('deviceName').textContent = taskInfo.name;
                deviceName.setText(taskInfo.name);
                device_id=parseInt(taskInfo.id);
                widgets['ddbid'].setText(device_id);
              }
              widgets['status'].setText(taskInfo.status);
            },
            onError : function( response ) {
              setTimeout(poll, 5000);
            }
          };

          polling_count = polling_count + 1;
          widgets['polling_count'].setText(polling_count);
          if (device_id == parseInt(device_id, 10)) {
            url = 'poll/' + device_id + '?callback=%callback%';
          } else {
            url = 'poll?callback=%callback%';
          }
          device.loadScript( url, /%callback%/, callbacks, 5000 );
        };

        poll();
        //setTimeout(poll, 5000);
      },
    });
  }
);
